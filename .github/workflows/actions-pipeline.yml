name: CI

on:
  push:
    branches:
      - "master"
      - "task/**"
  pull_request:
    branches:
      - "master"
      - "task/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  maven-compile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Checkout another public repository
        uses: actions/checkout@v3
        with:
          repository: kcmchandramouli/java-bank
          path: java-bank

      - name: setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven Build
        run: |
          cd java-bank  
          mvn compile
  #mvn -B package --file java-bank/pom.xml

  security-check:
    runs-on: ubuntu-latest
    needs: maven-compile

    steps:
      - uses: actions/checkout@v4

      - name: Checkout another public repository
        uses: actions/checkout@v3
        with:
          repository: kcmchandramouli/java-bank
          path: java-bank

      - name: Trivy Installation
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install trivy -y

      - name: Trivy Fs Scan
        run: trivy fs --format table -o fs-report.json .

      - name: Gitleaks Installation
        run: sudo apt-get install gitleaks -y

      - name: Gitleaks Code Scan
        run: gitleaks detect --source . -r gitileaks-report.json --report-format json -f json

  maven-test:
    runs-on: ubuntu-latest
    needs: maven-compile

    steps:
      - uses: actions/checkout@v4

      - name: Checkout another public repository
        uses: actions/checkout@v3
        with:
          repository: kcmchandramouli/java-bank
          path: java-bank

      - name: setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Gitleaks Installation
        run: sudo apt-get install maven -y

      - name: Maven unit test
        run: |
          cd java-bank  
          mvn test

  # Build & Push docker image to Docker Hub
  docker_build-push:
    runs-on: ubuntu-latest
    needs: maven-test

    steps:
      - uses: actions/checkout@v4

      - name: Checkout another public repository
        uses: actions/checkout@v3
        with:
          repository: kcmchandramouli/java-bank
          path: java-bank

      - name: setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven Build & package
        run: |
          cd java-bank  
          mvn package

      # - name: Download JAR artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: java-bank-jar
      #     path: . #java-bank/target

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ls
        run: |
          ls -la
          cd java-bank
          ls -la
          cd target
          ls -la

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: kcmchandramoulli/java-bank:latest

      - name: Trivy Installation
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install trivy -y
  
      - name: Trivy image Scan
        run: trivy image --format table -o image-report.html kcmchandramoulli/java-bank:latest

      - name: Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: kcmchandramoulli/java-bank:latest

  deploy_to_AKS:
    runs-on: self-hosted  #ubuntu-latest
    needs: docker_build-push

    steps:
    - uses: actions/checkout@v4

    - name: Azure Login
      uses: Azure/login@v2.2.0
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        # creds: # optional
        # ClientId of the Azure Service principal created.
        client-id: ${{ secrets.AZURE_CLIENT_ID }}  # optional
        # TenantId of the Azure Service principal created.
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}  # optional
        # Azure subscriptionId
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # optional
        auth-type: SERVICE_PRINCIPAL  # optional, default is SERVICE_PRINCIPAL
            
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v3
      with:
        # Resource Group Name
        resource-group: kcm-cicd
        # AKS Cluster Name
        cluster-name: demo1
        # # AKS Cluster Subscription
        # subscription: # optional
        # # Get cluster admin credentials. Values: true or false
        # admin: # optional
        # # Enables kubelogin for non-admin user scenario. Values: true or false
        # use-kubelogin: # optional

    - name: Create secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v4.0
      with:
        # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
        # namespace: # optional
        # Type of Kubernetes secret. Defaults to 'kubernetes.io/dockerconfigjson'.
        secret-type: docker-registry # optional, default is kubernetes.io/dockerconfigjson
        # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
        secret-name: docker-image-pull-secret
        # Container Registry URL
        container-registry-url: https://index.docker.io/v1/ # optional
        container-registry-username: ${{ vars.DOCKERHUB_USERNAME }} # optional
        container-registry-password: ${{ secrets.DOCKERHUB_TOKEN }} # optional

    - name: ls
      run: ls -la

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: latest

    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4.9
      with:
        manifests: ds.yml
        images: kcmchandramoulli/java-bank:latest
        imagepullsecrets: docker-image-pull-secret
        action: deploy
